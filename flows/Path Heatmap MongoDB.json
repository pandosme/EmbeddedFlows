[
    {
        "id": "62cccda6ee749e9e",
        "type": "tab",
        "label": "Path Heatmap MongoDB",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f3edab4f2767fea3",
        "type": "group",
        "z": "62cccda6ee749e9e",
        "name": "Initialization",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "43d8c82f4e295069",
            "429418ea5e36c1c2",
            "f2e711541f8257e9",
            "de5704d8d0b743a0",
            "c56784190959fd26",
            "79e539a4bb91fec7",
            "187a8c80880f6e2d",
            "442224bfc6230a80",
            "d661a0fe0b206003",
            "247d9213efac8be8",
            "5b1f751bf4499647",
            "d68f296e3d2fc8a3",
            "cce5d3899786d4c9",
            "042fbb66a5368624",
            "55c2897d306017d7",
            "c4b36a2e68db14b4",
            "bfc46fabf2e39ba3",
            "78fd5b8e7b261c51",
            "518e0cd0ec46123f",
            "e3c1e0bbd82c80c0",
            "de51f3d754944f0d",
            "0b01a507bcb6ca2f",
            "a05032182d3aa3dd"
        ],
        "x": 74,
        "y": 459,
        "w": 892,
        "h": 322
    },
    {
        "id": "20178b619707e095",
        "type": "group",
        "z": "62cccda6ee749e9e",
        "name": "Dashboard",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "54dc07c9136ec2a9",
            "b2dc39b0fa82d7c1",
            "53b3230832fcd42b",
            "b6690caf34d14f1d",
            "ad21ebbf102f01fb",
            "5e0f7c4488f2051e",
            "2c6c274fcb438ebb",
            "1971bd6722be3e9b",
            "8fb67ebba16b29ab",
            "1fcd2a58e15e8626"
        ],
        "x": 74,
        "y": 219,
        "w": 1092,
        "h": 202
    },
    {
        "id": "a755a35f8a388a95",
        "type": "group",
        "z": "62cccda6ee749e9e",
        "name": "Data Ingestion",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "2eaf552403e519a9",
            "5c5917d02a288537",
            "e266ec291b74af7d",
            "0a67d9e0f5874e2c",
            "5fc9dd4d2c844bc5",
            "c6202a0b4e1d37a7",
            "d1ad905a34107072"
        ],
        "x": 74,
        "y": 39,
        "w": 652,
        "h": 142
    },
    {
        "id": "2eaf552403e519a9",
        "type": "Objects",
        "z": "62cccda6ee749e9e",
        "g": "a755a35f8a388a95",
        "version": "2",
        "output": "3",
        "classFilter": "-1",
        "confidence": "10",
        "rotation": "0",
        "cog": "1",
        "predictions": "0",
        "idle": "3",
        "x": 180,
        "y": 80,
        "wires": [
            [
                "e266ec291b74af7d"
            ]
        ]
    },
    {
        "id": "5c5917d02a288537",
        "type": "function",
        "z": "62cccda6ee749e9e",
        "g": "a755a35f8a388a95",
        "name": "Set name",
        "func": "msg.payload.device = global.get(\"device\").serial;\nmsg.payload.name = flow.get(\"device\").hostname || flow.get(\"device\").name;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 80,
        "wires": [
            [
                "0a67d9e0f5874e2c"
            ]
        ]
    },
    {
        "id": "e266ec291b74af7d",
        "type": "function",
        "z": "62cccda6ee749e9e",
        "g": "a755a35f8a388a95",
        "name": "Filter",
        "func": "//Filter minimum distance\nvar distance = flow.get(\"distance\") || 0;\nif( msg.payload.distance < distance)  \n    return;\n\n\n//Filter minimum age\nvar age = flow.get(\"age\") || 0;\nif( msg.payload.age < age)  \n    return;\n\n//Filter object class type\nvar classes= flow.get(\"classes\");\nvar ignoreClass = true;\nclasses.forEach(function(element) {\n    if( element === msg.payload.class)\n        ignoreClass = false;\n});\nif(ignoreClass)\n    return;\n\n//Filter object passed Area Of Intrest\nvar aoi = flow.get(\"aoi\") ||null;\nif( aoi ) {\n    var ignore = true;\n    msg.payload.path.forEach(function(position) {\n        if (ignore && \n            position.x >= aoi.x1 && \n            position.x <= aoi.x2 &&\n            position.y >= aoi.y1 &&\n            position.y <= aoi.y2)\n                ignore = false;\n    });\n    if( ignore )\n        return;\n}\n\n//All filters passed\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 80,
        "wires": [
            [
                "5c5917d02a288537"
            ]
        ]
    },
    {
        "id": "43d8c82f4e295069",
        "type": "Axis device",
        "z": "62cccda6ee749e9e",
        "g": "f3edab4f2767fea3",
        "name": "",
        "preset": "fe1f55a3a9a8fd1a",
        "action": "Device Info",
        "cgi": "",
        "data": "",
        "options": "",
        "filename": "",
        "x": 590,
        "y": 740,
        "wires": [
            [
                "f2e711541f8257e9"
            ]
        ]
    },
    {
        "id": "429418ea5e36c1c2",
        "type": "inject",
        "z": "62cccda6ee749e9e",
        "g": "f3edab4f2767fea3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 500,
        "wires": [
            [
                "de5704d8d0b743a0",
                "79e539a4bb91fec7",
                "442224bfc6230a80",
                "d68f296e3d2fc8a3",
                "0b01a507bcb6ca2f",
                "78fd5b8e7b261c51",
                "518e0cd0ec46123f"
            ]
        ]
    },
    {
        "id": "f2e711541f8257e9",
        "type": "change",
        "z": "62cccda6ee749e9e",
        "g": "f3edab4f2767fea3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "device",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "de5704d8d0b743a0",
        "type": "change",
        "z": "62cccda6ee749e9e",
        "g": "f3edab4f2767fea3",
        "name": "Authentication",
        "rules": [
            {
                "t": "set",
                "p": "address",
                "pt": "msg",
                "to": "localhost",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "user",
                "pt": "msg",
                "to": "nodered",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "password",
                "pt": "msg",
                "to": "rednode",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 740,
        "wires": [
            [
                "43d8c82f4e295069"
            ]
        ]
    },
    {
        "id": "0a67d9e0f5874e2c",
        "type": "mongodb out",
        "z": "62cccda6ee749e9e",
        "g": "a755a35f8a388a95",
        "mongodb": "",
        "name": "Insert",
        "collection": "path",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 630,
        "y": 80,
        "wires": []
    },
    {
        "id": "54dc07c9136ec2a9",
        "type": "ui_button",
        "z": "62cccda6ee749e9e",
        "g": "20178b619707e095",
        "name": "Query",
        "group": "24e791444694f2ee",
        "order": 4,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Query",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 260,
        "wires": [
            [
                "b2dc39b0fa82d7c1"
            ]
        ]
    },
    {
        "id": "c56784190959fd26",
        "type": "ui_dropdown",
        "z": "62cccda6ee749e9e",
        "g": "f3edab4f2767fea3",
        "name": "From",
        "label": "From",
        "tooltip": "",
        "place": "Select option",
        "group": "24e791444694f2ee",
        "order": 2,
        "width": "4",
        "height": "1",
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "today",
                "value": "today",
                "type": "str"
            },
            {
                "label": "yesterday",
                "value": "yesterday",
                "type": "str"
            },
            {
                "label": "Last 30 miniutes",
                "value": 0.5,
                "type": "num"
            },
            {
                "label": "Last hour",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Last 2 hours",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Last 3 hours",
                "value": 3,
                "type": "num"
            },
            {
                "label": "Last 6 hours",
                "value": 6,
                "type": "num"
            },
            {
                "label": "Last 12 hours",
                "value": 12,
                "type": "num"
            },
            {
                "label": "Last day",
                "value": "24",
                "type": "str"
            },
            {
                "label": "Last 2 days",
                "value": "48",
                "type": "str"
            },
            {
                "label": "Last 7 days",
                "value": "168",
                "type": "str"
            },
            {
                "label": "Last 2 weeks",
                "value": "336",
                "type": "str"
            },
            {
                "label": "Last 4 weeks",
                "value": "672",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 570,
        "y": 540,
        "wires": [
            [
                "247d9213efac8be8"
            ]
        ]
    },
    {
        "id": "79e539a4bb91fec7",
        "type": "change",
        "z": "62cccda6ee749e9e",
        "g": "f3edab4f2767fea3",
        "name": "flow.startTime",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "startTime",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 540,
        "wires": [
            [
                "c56784190959fd26"
            ]
        ]
    },
    {
        "id": "187a8c80880f6e2d",
        "type": "ui_dropdown",
        "z": "62cccda6ee749e9e",
        "g": "f3edab4f2767fea3",
        "name": "Period",
        "label": "Period",
        "tooltip": "",
        "place": "Select option",
        "group": "24e791444694f2ee",
        "order": 3,
        "width": "4",
        "height": "1",
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Until now",
                "value": 0,
                "type": "num"
            },
            {
                "label": "1 day",
                "value": 1,
                "type": "num"
            },
            {
                "label": "1 week",
                "value": 7,
                "type": "num"
            },
            {
                "label": "1 month",
                "value": 30,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 570,
        "y": 580,
        "wires": [
            [
                "d661a0fe0b206003"
            ]
        ]
    },
    {
        "id": "442224bfc6230a80",
        "type": "change",
        "z": "62cccda6ee749e9e",
        "g": "f3edab4f2767fea3",
        "name": "stopTime",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "stopTime",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 580,
        "wires": [
            [
                "187a8c80880f6e2d"
            ]
        ]
    },
    {
        "id": "d661a0fe0b206003",
        "type": "change",
        "z": "62cccda6ee749e9e",
        "g": "f3edab4f2767fea3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "stopTime",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "247d9213efac8be8",
        "type": "change",
        "z": "62cccda6ee749e9e",
        "g": "f3edab4f2767fea3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "startTime",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "b2dc39b0fa82d7c1",
        "type": "function",
        "z": "62cccda6ee749e9e",
        "g": "20178b619707e095",
        "name": "Query",
        "func": "var startTime = flow.get(\"startTime\") || \"today\";\nif (startTime === \"today\" || startTime === \"yesterday\") {\n    if( startTime === \"today\") {\n        var d = new Date();\n        d.setHours(0,0,0,0);\n        startTime = d.getTime();\n    }\n    if (startTime === \"yesterday\") {\n        var d = new Date();\n        d.setDate(d.getDate() - 1);\n        d.setHours(0, 0, 0, 0);\n        startTime = d.getTime();\n    }\n} else {\n    startTime = new Date().getTime() - (startTime * 3600 * 1000);\n}\n\nvar stopTime = flow.get(\"stopTime\") || 0;\n\nif( stopTime > 0 ) {\n    stopTime = startTime + (stopTime * 24 * 3600 * 1000);\n}\n\nmsg.payload = {\n    device: flow.get(\"device\").serial || \"Undefined\",\n    timestamp: {\n        $gte: startTime\n    }\n}\n\nif( stopTime > 0 )\n    msg.payload.timestam.$lte = stopTime\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 260,
        "wires": [
            [
                "53b3230832fcd42b"
            ]
        ]
    },
    {
        "id": "53b3230832fcd42b",
        "type": "mongodb in",
        "z": "62cccda6ee749e9e",
        "g": "20178b619707e095",
        "mongodb": "",
        "name": "Query",
        "collection": "path",
        "operation": "find",
        "x": 430,
        "y": 260,
        "wires": [
            [
                "ad21ebbf102f01fb"
            ]
        ]
    },
    {
        "id": "b6690caf34d14f1d",
        "type": "ui_template",
        "z": "62cccda6ee749e9e",
        "g": "20178b619707e095",
        "group": "24e791444694f2ee",
        "name": "Augmented Video",
        "order": 6,
        "width": "16",
        "height": "9",
        "format": "<link rel=\"stylesheet\" href=\"/css/imgareaselect-default.css\">\n<script src=\"/js/jquery.imgareaselect.js\"></script>\n\n<div id=\"{{'player_'+$id}}\"></div>\n\n<script>\nvar ctx = null;\nvar imageWidth = 1280;\nvar imageHeight = 720;\nvar viewWidth = 800;\nvar viewHeight = 450;\nvar selectBox = null;\nvar hold = true;\nvar boxId = \"None\";\nvar strength = 0.5;\nvar pathList = [];\n\nfunction ClearCanvas() {\n    if(ctx) {\n        ctx.beginPath();\n        ctx.clearRect(0, 0, 1000, 1000 );\n        ctx.stroke();\n    }\n}\n\nfunction setupVideo( scope, video ) {\n  var width = video.width || 1280;\n  var height = video.height || 720;\n  var rotation = video.rotation || 0;\n  var aspect = video.aspect || \"16:6\";\n        \n  $(\"#player_\"+scope.$id).empty();\n        \n  //Setup view area aspect ration\n  if(rotation == 90 || rotation == 270 ) {\n    $(\"#player_\"+scope.$id).append('<div id=\"view_' + scope.$id + '\" style=\"width:450px; height:800px;\">');\n  } else {\n    $(\"#player_\"+scope.$id).append('<div id=\"view_' + scope.$id + '\" style=\"width:800px; height:450px;\">');\n  }\n\n  $(\"#view_\"+scope.$id).append('<div id=\"canvas_'+ scope.$id + '\" style=\"width:100%; height:100%; position:relative\">');\n  $(\"#canvas_\"+scope.$id).append('<img id=\"image_' + scope.$id + '\" class=\"card-img-top\" src=\"\" alt=\"Image\" style=\"width:100%; height:100%; position:absolute; top:0px; left:0px;\">');\n  $(\"#canvas_\"+scope.$id).append('<canvas id=\"objects_' + scope.$id + '\" width=\"1000\" height=\"1000\" style=\"width:100%; height:100%; position:absolute; top:0px; left:0px;\"></canvas>');\n        \n  $(\"#image_\"+scope.$id).attr('src','http://'+window.location.hostname+'/axis-cgi/jpg/image.cgi?resolution='+width+'x'+height+'&_='+new Date().getTime());\n  canvas = document.getElementById(\"objects_\"+scope.$id);\n  ctx = canvas.getContext(\"2d\");\n}\n\nfunction drawPath( data ) {\n  if(!ctx)\n      return;\n\n  var first = data.path[0];\n  var last = data.path[data.path.length-1];\n\n  ctx.globalAlpha = strength;\n  ctx.beginPath();\n  ctx.lineWidth = 3;\n  ctx.strokeStyle = '#00FF00';\n  ctx.font = \"30px Arial\";\n  ctx.fillStyle = '#FFFF00';    \n  ctx.moveTo(first.x, first.y );\n  ctx.arc(first.x, first.y, 3, 0, 2 * Math.PI);\n//  ctx.fillText(data.class, first.x, first.y - 10 );\n  ctx.stroke();\t\n\n  ctx.beginPath();\n  ctx.strokeStyle = '#FFFF00';\n  ctx.moveTo(data.path[0].x, data.path[0].y );\n  for( var i = 1; i < data.path.length; i++ )\n      ctx.lineTo(data.path[i].x,data.path[i].y );\n  ctx.lineTo(last.x,last.y );\n  ctx.stroke();\t\n\n  ctx.beginPath();\n  ctx.lineWidth = 3;\n  ctx.strokeStyle = '#FF0000';\n  ctx.moveTo(last.x, last.y );\n  ctx.arc(last.x, last.y, 3, 0, 2 * Math.PI);\n  ctx.stroke();\t\n}\n\n\n(function(scope) {\n  scope.$watch('msg', function(msg) {\n    if (!msg)\n      return;\n    console.log(msg.topic);\n\n    switch( msg.topic ) {\n      case \"video\":\n          setupVideo(scope,msg.payload);\n        break;\n\n      case \"path\":\n          drawPath( msg.payload );\n        break;\n\n      case \"paths\":\n          pathList = msg.payload;\n          ClearCanvas();\n          msg.payload.forEach(function(path){\n            drawPath( path );\n          });\n        break;\n\n      case \"strength\":\n          ClearCanvas();\n          strength = msg.payload;\n          pathList.forEach( function(path) {\n            drawPath( path );\n          });\n        break;\n\n      case \"reset\":\n          ClearCanvas();\n        break;\n\n      case \"aoi\":\n          if( selectBox ) {\n            selectBox.setOptions({hide: true});\n            selectBox = null;\n          }\n          if( typeof msg.payload !== \"object\" )\n            return;\n          boxId = msg.payload.id || \"None\";\n          selectBox = $(\"#image_\"+scope.$id).imgAreaSelect({\n            x1: parseInt((msg.payload.x1 / 1000) * viewWidth),\n            y1: parseInt((msg.payload.y1 / 1000) * viewHeight),\n            x2: parseInt((msg.payload.x2 / 1000) * viewWidth),\n            y2: parseInt((msg.payload.y2 / 1000) * viewHeight),\n            minHeight: 20,\n            minWidth: 20,\n            handles: true,\n            enable:true,movable:true,resizable:true,show:true,\n            instance: true,\n            onSelectEnd: function( image, area ) {\n              var box = {\n                id: boxId,\n                x1: parseInt((area.x1 / viewWidth) * 1000),\n                x2: parseInt((area.x2 / viewWidth) * 1000),\n                y1: parseInt((area.y1 / viewHeight) * 1000),\n                y2: parseInt((area.y2 / viewHeight) * 1000)\n              }\n             scope.send({topic:boxId||\"none\",payload:box});\n            }\n          });\n          selectBox.setOptions({show: true});\n        break;\n    }\n  });\n})(scope);\n</script>\n\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 870,
        "y": 260,
        "wires": [
            [
                "8fb67ebba16b29ab"
            ]
        ]
    },
    {
        "id": "ad21ebbf102f01fb",
        "type": "change",
        "z": "62cccda6ee749e9e",
        "g": "20178b619707e095",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "paths",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 260,
        "wires": [
            [
                "b6690caf34d14f1d"
            ]
        ]
    },
    {
        "id": "5b1f751bf4499647",
        "type": "ui_slider",
        "z": "62cccda6ee749e9e",
        "g": "f3edab4f2767fea3",
        "name": "",
        "label": "Strength",
        "tooltip": "",
        "group": "24e791444694f2ee",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "strength",
        "topicType": "str",
        "min": "0.005",
        "max": "0.5",
        "step": "0.005",
        "className": "",
        "x": 580,
        "y": 500,
        "wires": [
            [
                "cce5d3899786d4c9"
            ]
        ]
    },
    {
        "id": "d68f296e3d2fc8a3",
        "type": "change",
        "z": "62cccda6ee749e9e",
        "g": "f3edab4f2767fea3",
        "name": "strength",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "strength",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 500,
        "wires": [
            [
                "5b1f751bf4499647"
            ]
        ]
    },
    {
        "id": "cce5d3899786d4c9",
        "type": "change",
        "z": "62cccda6ee749e9e",
        "g": "f3edab4f2767fea3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "strength",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "strength",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 500,
        "wires": [
            [
                "a05032182d3aa3dd"
            ]
        ]
    },
    {
        "id": "042fbb66a5368624",
        "type": "ui_numeric",
        "z": "62cccda6ee749e9e",
        "g": "f3edab4f2767fea3",
        "name": "",
        "label": "Min Age (seconds)",
        "tooltip": "",
        "group": "9d4991a45f17dfc1",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.5",
        "className": "",
        "x": 610,
        "y": 660,
        "wires": [
            [
                "c4b36a2e68db14b4"
            ]
        ]
    },
    {
        "id": "55c2897d306017d7",
        "type": "ui_numeric",
        "z": "62cccda6ee749e9e",
        "g": "f3edab4f2767fea3",
        "name": "",
        "label": "Min Distance (% of view)",
        "tooltip": "",
        "group": "9d4991a45f17dfc1",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": "10",
        "className": "",
        "x": 630,
        "y": 700,
        "wires": [
            [
                "bfc46fabf2e39ba3"
            ]
        ]
    },
    {
        "id": "c4b36a2e68db14b4",
        "type": "change",
        "z": "62cccda6ee749e9e",
        "g": "f3edab4f2767fea3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "age",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "bfc46fabf2e39ba3",
        "type": "change",
        "z": "62cccda6ee749e9e",
        "g": "f3edab4f2767fea3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "distance",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "78fd5b8e7b261c51",
        "type": "change",
        "z": "62cccda6ee749e9e",
        "g": "f3edab4f2767fea3",
        "name": "flow.age",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "age",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 660,
        "wires": [
            [
                "042fbb66a5368624"
            ]
        ]
    },
    {
        "id": "518e0cd0ec46123f",
        "type": "change",
        "z": "62cccda6ee749e9e",
        "g": "f3edab4f2767fea3",
        "name": "flow.distance",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "distance",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 700,
        "wires": [
            [
                "55c2897d306017d7"
            ]
        ]
    },
    {
        "id": "e3c1e0bbd82c80c0",
        "type": "ui_dropdown",
        "z": "62cccda6ee749e9e",
        "g": "f3edab4f2767fea3",
        "name": "Class selection",
        "label": "",
        "tooltip": "",
        "place": "Select detection",
        "group": "9d4991a45f17dfc1",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": true,
        "options": [
            {
                "label": "Human",
                "value": "Human",
                "type": "str"
            },
            {
                "label": "Car",
                "value": "Car",
                "type": "str"
            },
            {
                "label": "Truck",
                "value": "Truck",
                "type": "str"
            },
            {
                "label": "Bus",
                "value": "Bus",
                "type": "str"
            },
            {
                "label": "Motorcycle",
                "value": "Motorcycle",
                "type": "str"
            },
            {
                "label": "Other vehicle type",
                "value": "Vehicle",
                "type": "str"
            },
            {
                "label": "Face",
                "value": "Face",
                "type": "str"
            },
            {
                "label": "License plate",
                "value": "License plate",
                "type": "str"
            },
            {
                "label": "Unknown type",
                "value": "Object",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 600,
        "y": 620,
        "wires": [
            [
                "de51f3d754944f0d"
            ]
        ]
    },
    {
        "id": "de51f3d754944f0d",
        "type": "change",
        "z": "62cccda6ee749e9e",
        "g": "f3edab4f2767fea3",
        "name": "flow.classes",
        "rules": [
            {
                "t": "set",
                "p": "classes",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "0b01a507bcb6ca2f",
        "type": "function",
        "z": "62cccda6ee749e9e",
        "g": "f3edab4f2767fea3",
        "name": "Classes",
        "func": "msg.options = [ \"Human\", \"Car\", \"Truck\", \"Bus\", \"Motorcycle\", \"Vehicle\", \"Face\", \"License plate\", \"Object\" ];\nif( !flow.get(\"classes\") ) {\n    msg.payload = [ \"Human\", \"Car\", \"Truck\", \"Bus\", \"Motorcycle\", \"Vehicle\" ];\n} else {\n    msg.payload = flow.get(\"classes\");\n}\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 620,
        "wires": [
            [
                "e3c1e0bbd82c80c0"
            ]
        ]
    },
    {
        "id": "5e0f7c4488f2051e",
        "type": "ui_button",
        "z": "62cccda6ee749e9e",
        "g": "20178b619707e095",
        "name": "",
        "group": "9d4991a45f17dfc1",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Set area objects must pass",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 220,
        "y": 300,
        "wires": [
            [
                "2c6c274fcb438ebb"
            ]
        ]
    },
    {
        "id": "2c6c274fcb438ebb",
        "type": "function",
        "z": "62cccda6ee749e9e",
        "g": "20178b619707e095",
        "name": "aoi",
        "func": "msg.topic = \"aoi\";\nmsg.payload = flow.get(\"aoi\") || {\n    id: \"aoi\",\n    x1: 200,\n    y1: 200,\n    x2: 800,\n    y2: 800\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 300,
        "wires": [
            [
                "b6690caf34d14f1d"
            ]
        ]
    },
    {
        "id": "1971bd6722be3e9b",
        "type": "ui_button",
        "z": "62cccda6ee749e9e",
        "g": "20178b619707e095",
        "name": "",
        "group": "9d4991a45f17dfc1",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Save",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "aoi",
        "topicType": "str",
        "x": 670,
        "y": 340,
        "wires": [
            [
                "b6690caf34d14f1d"
            ]
        ]
    },
    {
        "id": "8fb67ebba16b29ab",
        "type": "change",
        "z": "62cccda6ee749e9e",
        "g": "20178b619707e095",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "aoi",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "a05032182d3aa3dd",
        "type": "link out",
        "z": "62cccda6ee749e9e",
        "g": "f3edab4f2767fea3",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "1fcd2a58e15e8626"
        ],
        "x": 895,
        "y": 500,
        "wires": []
    },
    {
        "id": "1fcd2a58e15e8626",
        "type": "link in",
        "z": "62cccda6ee749e9e",
        "g": "20178b619707e095",
        "name": "link in 1",
        "links": [
            "a05032182d3aa3dd"
        ],
        "x": 705,
        "y": 380,
        "wires": [
            [
                "b6690caf34d14f1d"
            ]
        ]
    },
    {
        "id": "5fc9dd4d2c844bc5",
        "type": "inject",
        "z": "62cccda6ee749e9e",
        "g": "a755a35f8a388a95",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 140,
        "wires": [
            [
                "c6202a0b4e1d37a7"
            ]
        ]
    },
    {
        "id": "c6202a0b4e1d37a7",
        "type": "function",
        "z": "62cccda6ee749e9e",
        "g": "a755a35f8a388a95",
        "name": "Data Retention",
        "func": "//Remove paths older than 24 hours\n\nmsg.payload = {\n    device: flow.get(\"device\").serial || \"Undefined\",\n    timestamp: {\n        $lte: new Date().getTime() - (24*3600*1000)\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 140,
        "wires": [
            [
                "d1ad905a34107072"
            ]
        ]
    },
    {
        "id": "d1ad905a34107072",
        "type": "mongodb out",
        "z": "62cccda6ee749e9e",
        "g": "a755a35f8a388a95",
        "mongodb": "",
        "name": "Remove",
        "collection": "path",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 640,
        "y": 140,
        "wires": []
    },
    {
        "id": "fe1f55a3a9a8fd1a",
        "type": "Device Access",
        "name": "",
        "address": "localhost",
        "protocol": "http"
    },
    {
        "id": "24e791444694f2ee",
        "type": "ui_group",
        "name": "Heatmap",
        "tab": "d5e19c9dadc12bbf",
        "order": 1,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9d4991a45f17dfc1",
        "type": "ui_group",
        "name": "Filter",
        "tab": "d5e19c9dadc12bbf",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d5e19c9dadc12bbf",
        "type": "ui_tab",
        "name": "Path flow heatmap",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]
