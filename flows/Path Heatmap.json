[
    {
        "id": "c1119e96a359b48a",
        "type": "tab",
        "label": "Path Heatmap",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0eb6fb352ce86d20",
        "type": "group",
        "z": "c1119e96a359b48a",
        "name": "Initialization",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "5194fc9b0e7a8d42",
            "f6e9194fe5ff198a",
            "d19e1798673f35b5",
            "c39ad5ee3752571f",
            "d6e8a4c9b81dad2d",
            "e01d5d34f93bc161",
            "5c93aa909670c1e8",
            "d79f965f0f333090",
            "bbfd78c2a59bbd3d",
            "1cff5bbb78b2d3d3",
            "e453a672c692eaec",
            "bf3eca666cd16016",
            "e99c4ceac5671ac7",
            "916da78ad513005c",
            "f77fafc4c91734e3",
            "bbfb4e1ed5277b18",
            "07a7422a5082b74c",
            "c2e35e259485cc6c",
            "c04912f0e236033a",
            "51f9bb9974915c76",
            "bbf63f36e48d35a4",
            "ec11ed4b91df5240",
            "c4bb50de1e61dd7f"
        ],
        "x": 74,
        "y": 619,
        "w": 1002,
        "h": 322
    },
    {
        "id": "e2137dd2b3f1387c",
        "type": "group",
        "z": "c1119e96a359b48a",
        "name": "Dashboard",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "c626d8b6cce380f0",
            "7ff623b0148b9941",
            "1bfc738b59f92a75",
            "2294874a37208e4d",
            "7a560eac62505295",
            "4b1113b2c546bdd8",
            "b1fa01bdaac7558c",
            "f11026655e297a23",
            "cb99fae3c12034ed",
            "2d6748edf8563f3b",
            "f2b9da6c0460316e",
            "bac55f0864b2e149",
            "69d86c1a9b39ebe5",
            "5870a043cc207cf4",
            "7ba26b2f9bf1b723",
            "2e61cc7729cf74ed",
            "77b2b32293b4619a",
            "84bbf1f773a441d1"
        ],
        "x": 74,
        "y": 219,
        "w": 1092,
        "h": 362
    },
    {
        "id": "963021aef5a2828f",
        "type": "group",
        "z": "c1119e96a359b48a",
        "name": "Data Ingestion",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "28d3365dc714bee3",
            "87855d34acadd86f",
            "a577e65c6b154dc6",
            "2b4d24e814731fcd",
            "73bad59f665e234a",
            "042aac4ae5c082f7",
            "7aea4c7dde0a002a"
        ],
        "x": 74,
        "y": 39,
        "w": 652,
        "h": 142
    },
    {
        "id": "28d3365dc714bee3",
        "type": "Objects",
        "z": "c1119e96a359b48a",
        "g": "963021aef5a2828f",
        "version": "1",
        "output": "3",
        "classFilter": "-1",
        "confidence": "10",
        "rotation": "0",
        "cog": "0",
        "predictions": "0",
        "idle": "0",
        "x": 180,
        "y": 80,
        "wires": [
            [
                "a577e65c6b154dc6"
            ]
        ]
    },
    {
        "id": "87855d34acadd86f",
        "type": "function",
        "z": "c1119e96a359b48a",
        "g": "963021aef5a2828f",
        "name": "Set name",
        "func": "msg.payload.device = flow.get(\"device\").serial;\nmsg.payload.name = flow.get(\"device\").hostname || flow.get(\"device\").name;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 80,
        "wires": [
            [
                "2b4d24e814731fcd"
            ]
        ]
    },
    {
        "id": "a577e65c6b154dc6",
        "type": "function",
        "z": "c1119e96a359b48a",
        "g": "963021aef5a2828f",
        "name": "Filter",
        "func": "//Filter minimum distance\nvar distance = flow.get(\"distance\") || 0;\nif( msg.payload.distance < distance)  \n    return;\n\n\n//Filter minimum age\nvar age = flow.get(\"age\") || 0;\nif( msg.payload.age < age)  \n    return;\n\n//Filter object class type\nvar classes= flow.get(\"classes\");\nvar ignoreClass = true;\nclasses.forEach(function(element) {\n    if( element === msg.payload.class)\n        ignoreClass = false;\n});\nif(ignoreClass)\n    return;\n\n//Filter object passed Area Of Intrest\nvar aoi = flow.get(\"aoi\") ||null;\nif( aoi ) {\n    var ignore = true;\n    msg.payload.path.forEach(function(position) {\n        if (ignore && \n            position.x >= aoi.x1 && \n            position.x <= aoi.x2 &&\n            position.y >= aoi.y1 &&\n            position.y <= aoi.y2)\n                ignore = false;\n    });\n    if( ignore )\n        return;\n}\n\n//All filters passed\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 80,
        "wires": [
            [
                "87855d34acadd86f"
            ]
        ]
    },
    {
        "id": "5194fc9b0e7a8d42",
        "type": "Axis device",
        "z": "c1119e96a359b48a",
        "g": "0eb6fb352ce86d20",
        "name": "",
        "preset": "8851e1ed423632f9",
        "action": "Device Info",
        "cgi": "",
        "data": "",
        "options": "",
        "filename": "",
        "x": 590,
        "y": 900,
        "wires": [
            [
                "d19e1798673f35b5"
            ]
        ]
    },
    {
        "id": "f6e9194fe5ff198a",
        "type": "inject",
        "z": "c1119e96a359b48a",
        "g": "0eb6fb352ce86d20",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 660,
        "wires": [
            [
                "c39ad5ee3752571f",
                "1cff5bbb78b2d3d3",
                "51f9bb9974915c76",
                "bbfb4e1ed5277b18",
                "07a7422a5082b74c",
                "ec11ed4b91df5240",
                "c4bb50de1e61dd7f"
            ]
        ]
    },
    {
        "id": "d19e1798673f35b5",
        "type": "change",
        "z": "c1119e96a359b48a",
        "g": "0eb6fb352ce86d20",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "device",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "c39ad5ee3752571f",
        "type": "change",
        "z": "c1119e96a359b48a",
        "g": "0eb6fb352ce86d20",
        "name": "Authentication",
        "rules": [
            {
                "t": "set",
                "p": "address",
                "pt": "msg",
                "to": "localhost",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "user",
                "pt": "msg",
                "to": "root",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "password",
                "pt": "msg",
                "to": "pass",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 900,
        "wires": [
            [
                "5194fc9b0e7a8d42"
            ]
        ]
    },
    {
        "id": "c626d8b6cce380f0",
        "type": "ui_button",
        "z": "c1119e96a359b48a",
        "g": "e2137dd2b3f1387c",
        "name": "Query",
        "group": "fbb99308b8a63c91",
        "order": 4,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Query",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 260,
        "wires": [
            [
                "7ff623b0148b9941"
            ]
        ]
    },
    {
        "id": "d6e8a4c9b81dad2d",
        "type": "ui_dropdown",
        "z": "c1119e96a359b48a",
        "g": "0eb6fb352ce86d20",
        "name": "From",
        "label": "From",
        "tooltip": "",
        "place": "Select option",
        "group": "fbb99308b8a63c91",
        "order": 2,
        "width": "4",
        "height": "1",
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "today",
                "value": "today",
                "type": "str"
            },
            {
                "label": "yesterday",
                "value": "yesterday",
                "type": "str"
            },
            {
                "label": "Last 30 miniutes",
                "value": 0.5,
                "type": "num"
            },
            {
                "label": "Last hour",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Last 2 hours",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Last 3 hours",
                "value": 3,
                "type": "num"
            },
            {
                "label": "Last 6 hours",
                "value": 6,
                "type": "num"
            },
            {
                "label": "Last 12 hours",
                "value": 12,
                "type": "num"
            },
            {
                "label": "Last day",
                "value": "24",
                "type": "str"
            },
            {
                "label": "Last 2 days",
                "value": "48",
                "type": "str"
            },
            {
                "label": "Last 7 days",
                "value": "168",
                "type": "str"
            },
            {
                "label": "Last 2 weeks",
                "value": "336",
                "type": "str"
            },
            {
                "label": "Last 4 weeks",
                "value": "672",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 570,
        "y": 700,
        "wires": [
            [
                "d79f965f0f333090"
            ]
        ]
    },
    {
        "id": "e01d5d34f93bc161",
        "type": "ui_dropdown",
        "z": "c1119e96a359b48a",
        "g": "0eb6fb352ce86d20",
        "name": "Period",
        "label": "Period",
        "tooltip": "",
        "place": "Select option",
        "group": "fbb99308b8a63c91",
        "order": 3,
        "width": "4",
        "height": "1",
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Until now",
                "value": 0,
                "type": "num"
            },
            {
                "label": "1 day",
                "value": 1,
                "type": "num"
            },
            {
                "label": "1 week",
                "value": 7,
                "type": "num"
            },
            {
                "label": "1 month",
                "value": 30,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 570,
        "y": 740,
        "wires": [
            [
                "5c93aa909670c1e8"
            ]
        ]
    },
    {
        "id": "5c93aa909670c1e8",
        "type": "change",
        "z": "c1119e96a359b48a",
        "g": "0eb6fb352ce86d20",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "duration",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "d79f965f0f333090",
        "type": "change",
        "z": "c1119e96a359b48a",
        "g": "0eb6fb352ce86d20",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "startTime",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "7ff623b0148b9941",
        "type": "function",
        "z": "c1119e96a359b48a",
        "g": "e2137dd2b3f1387c",
        "name": "Query",
        "func": "var startTime = flow.get(\"startTime\") || \"today\";\nif (startTime === \"today\" || startTime === \"yesterday\") {\n    if( startTime === \"today\") {\n        var d = new Date();\n        d.setHours(0,0,0,0);\n        startTime = d.getTime();\n    }\n    if (startTime === \"yesterday\") {\n        var d = new Date();\n        d.setDate(d.getDate() - 1);\n        d.setHours(0, 0, 0, 0);\n        startTime = d.getTime();\n    }\n} else {\n    startTime = new Date().getTime() - (startTime * 3600 * 1000);\n}\n\nvar duration = flow.get(\"duration\") || 0;\n\nif( duration > 0 ) {\n    duration = startTime + (duration * 24 * 3600 * 1000);\n}\n\nif (duration > 0)\n    msg.payload.timestam.$lte = duration\n\nmsg.payload = {\n    device: flow.get(\"device\").serial || \"Undefined\",\n    timestamp: {\n        $gte: startTime\n    }\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 260,
        "wires": [
            [
                "1bfc738b59f92a75"
            ]
        ]
    },
    {
        "id": "2294874a37208e4d",
        "type": "ui_template",
        "z": "c1119e96a359b48a",
        "g": "e2137dd2b3f1387c",
        "group": "fbb99308b8a63c91",
        "name": "Heatmap",
        "order": 6,
        "width": "16",
        "height": "16",
        "format": "<link rel=\"stylesheet\" href=\"/css/imgareaselect-default.css\">\n<script src=\"/js/jquery.imgareaselect.js\"></script>\n\n<div id=\"{{'view_'+$id}}\" style=\"width:800px; height:450px;\">\n  <div style=\"width:100%; height:100%; position:relative\">\n    <img id=\"{{'image_'+$id}}\" src=\"\" style=\"width:100%; height:100%; position:absolute; top:0px; left:0px;\">\n    <canvas id=\"{{'canvas_'+$id}}\" width=\"1000\" height=\"1000\" style=\"width:100%; height:100%; position:absolute; top:0px; left:0px;\"></canvas>\n  </div>\n</div>\n\n\n<script>\n  var ctx = null;\nvar imageWidth = 800;\nvar imageHeight = 450;\nvar strength = 0.5;\nvar pathList = [];\nvar selectArea = null;\nvar aoi = null;\n\nfunction ClearCanvas() {\n    if(ctx) {\n        ctx.beginPath();\n        ctx.clearRect(0, 0, 1000, 1000 );\n        ctx.stroke();\n    }\n\n    if( selectArea )\n        selectArea.setOptions({ hide: true });\n    selectArea = null;        \n}\n\nfunction setupImage( scope, data ) {\n    var rotation = data.rotation || 0;\n    var aspect = data.aspect || \"16:6\";\n    imageWidth = 800;  //Default for 16:9\n    imageHeight = 450;\n\n    if(aspect === \"1:1\")\n        imageHeight = 800;\n\n    if(aspect === \"4:3\")\n        imageHeight = 600;\n\n    //Setup aspect ration\n    if(rotation == 90 || rotation == 270 ) {\n        var temp = imageWidth;\n        imageHeight = imageWidth;\n        imageWidth = temp;\n    }\n\n    $(\"#view_\"+scope.$id).css(\"width\", imageWidth + \"px\");\n    $(\"#view_\"+scope.$id).css(\"height\", imageHeight+\"px\");\n\n    if( data.hasOwnProperty(\"image\") && data.image )\n        $(\"#image_\"+scope.$id).attr(\"src\",\"data:image/jpeg;base64,\" + data.image);\n    else\n        $(\"#image_\"+scope.$id).attr(\"src\",\"data:image/jpeg;base64, \");\n        \n    var canvas = document.getElementById(\"canvas_\"+scope.$id);\n    ctx = canvas.getContext(\"2d\");\n}\n\nfunction drawPath( data ) {\n    if(!ctx)\n        return;\n\n    var first = data.path[0];\n    var last = data.path[data.path.length-1];\n\n    ctx.globalAlpha = strength;\n    ctx.beginPath();\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = '#00FF00';\n    ctx.font = \"30px Arial\";\n    ctx.fillStyle = '#FFFF00';\n    ctx.moveTo(first.x, first.y );\n    ctx.arc(first.x, first.y, 3, 0, 2 * Math.PI);\n    // ctx.fillText(data.class, first.x, first.y - 10 );\n    ctx.stroke();\n\n    ctx.beginPath();\n    ctx.strokeStyle = '#FFFF00';\n    ctx.moveTo(data.path[0].x, data.path[0].y );\n    for( var i = 1; i < data.path.length; i++ )\n        ctx.lineTo(data.path[i].x,data.path[i].y ); ctx.lineTo(last.x,last.y );\n    ctx.stroke(); ctx.beginPath();\n    ctx.lineWidth=3;\n    ctx.strokeStyle='#FF0000';\n    ctx.moveTo(last.x, last.y );\n    ctx.arc(last.x, last.y, 3, 0, 2 * Math.PI); ctx.stroke();\n}\n\n\n(function(scope) {\n    scope.$watch('msg', function(msg) {\n        if( !msg || !msg.topic  )\n            return;\n        console.log(msg.topic);\n\n        switch( msg.topic ) {\n        case \"image\":\n            setupImage(scope,msg.payload);\n            break;\n\n        case \"path\":\n            drawPath( msg.payload );\n            break;\n\n        case \"paths\":\n            pathList = msg.payload;\n            msg.payload.forEach(function(path){\n                drawPath( path );\n            });\n            break;\n\n        case \"strength\":\n            ClearCanvas();\n            strength = (parseInt(msg.payload) / 100.0 ) * 0.5;\n            pathList.forEach( function(path) {\n                drawPath( path );\n            });\n            break;\n\n        case \"reset\":\n            ClearCanvas();\n            break;\n\n        case \"aoi\":\n            if( selectArea ) {\n                selectArea.setOptions({hide: true});\n                selectArea = null;\n            }\n            if( typeof msg.payload !== \"object\" )\n                return;\n            aoi = msg.payload.id || \"None\";\n            selectArea = $(\"#image_\"+scope.$id).imgAreaSelect({\n                x1: parseInt((msg.payload.x1 / 1000) * imageWidth),\n                y1: parseInt((msg.payload.y1 / 1000) * imageHeight),\n                x2: parseInt((msg.payload.x2 / 1000) * imageWidth),\n                y2: parseInt((msg.payload.y2 / 1000) * imageHeight),\n                minHeight: 20,\n                minWidth: 20,\n                handles: true,\n                enable:true,movable:true,resizable:true,show:true,\n                instance: true,\n                onSelectEnd: function( image, area ) {\n                var box = {\n                    id: aoi,\n                    x1: parseInt((area.x1 / imageWidth) * 1000),\n                    x2: parseInt((area.x2 / imageWidth) * 1000),\n                    y1: parseInt((area.y1 / imageHeight) * 1000),\n                    y2: parseInt((area.y2 / imageHeight) * 1000)\n                }\n                scope.send({topic:aoi||\"none\",payload:box});\n                }\n            });\n            selectArea.setOptions({show: true});\n            break;\n            case \"birth\":\n            case \"death\":\n                aoi = msg.payload.id || \"None\";\n                if(!selectArea) {\n                    selectArea = $(\"#image_\"+scope.$id).imgAreaSelect( {\n                        x1: parseInt(msg.payload.x1 / 1000 * imageWidth),\n                        x2: parseInt(msg.payload.x2 / 1000 * imageWidth),\n                        y1: parseInt(msg.payload.y1 / 1000 * imageHeight),\n                        y2: parseInt(msg.payload.y2 / 1000 * imageHeight),\n                        show: true, hide:false, minHeight: 5, minWidth: 5, handles: true, movable: true, resizable: true, instance:true,\n                        onSelectEnd: function( image, area ) {\n                            var area = {\n                                id: aoi,\n                                x1: parseInt((area.x1/imageWidth) * 1000),\n                                x2: parseInt((area.x2/imageWidth) * 1000),\n                                y1: parseInt((area.y1/imageHeight) * 1000),\n                                y2: parseInt((area.y2/imageHeight) * 1000)\n                            }\n                            scope.send({\n                                topic: aoi,\n                                payload: area\n                            });\n                        }\n                    });\n                }\n                selectArea.setSelection(\n                    parseInt(msg.payload.x1 / 1000 * imageWidth),\n                    parseInt(msg.payload.y1 / 1000 * imageHeight),\n                    parseInt(msg.payload.x2 / 1000 * imageWidth),\n                    parseInt(msg.payload.y2 / 1000 * imageHeight)\n                );\n                selectArea.setOptions({ show: true });\n            break;\n\t\t}\n    });\n})(scope);\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 900,
        "y": 260,
        "wires": [
            [
                "cb99fae3c12034ed"
            ]
        ]
    },
    {
        "id": "7a560eac62505295",
        "type": "change",
        "z": "c1119e96a359b48a",
        "g": "e2137dd2b3f1387c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "paths",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 260,
        "wires": [
            [
                "2294874a37208e4d"
            ]
        ]
    },
    {
        "id": "bbfd78c2a59bbd3d",
        "type": "ui_slider",
        "z": "c1119e96a359b48a",
        "g": "0eb6fb352ce86d20",
        "name": "",
        "label": "Strength",
        "tooltip": "",
        "group": "fbb99308b8a63c91",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "strength",
        "topicType": "str",
        "min": "5",
        "max": "100",
        "step": "0.5",
        "className": "",
        "x": 580,
        "y": 660,
        "wires": [
            [
                "e453a672c692eaec"
            ]
        ]
    },
    {
        "id": "1cff5bbb78b2d3d3",
        "type": "change",
        "z": "c1119e96a359b48a",
        "g": "0eb6fb352ce86d20",
        "name": "strength",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "strength",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 660,
        "wires": [
            [
                "bbfd78c2a59bbd3d"
            ]
        ]
    },
    {
        "id": "e453a672c692eaec",
        "type": "change",
        "z": "c1119e96a359b48a",
        "g": "0eb6fb352ce86d20",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "strength",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "strength",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 660,
        "wires": [
            [
                "bbf63f36e48d35a4"
            ]
        ]
    },
    {
        "id": "bf3eca666cd16016",
        "type": "ui_numeric",
        "z": "c1119e96a359b48a",
        "g": "0eb6fb352ce86d20",
        "name": "",
        "label": "Min Age (seconds)",
        "tooltip": "",
        "group": "798d2385ab795d1a",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.5",
        "className": "",
        "x": 610,
        "y": 820,
        "wires": [
            [
                "916da78ad513005c"
            ]
        ]
    },
    {
        "id": "e99c4ceac5671ac7",
        "type": "ui_numeric",
        "z": "c1119e96a359b48a",
        "g": "0eb6fb352ce86d20",
        "name": "",
        "label": "Min Distance (% of view)",
        "tooltip": "",
        "group": "798d2385ab795d1a",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": "10",
        "className": "",
        "x": 630,
        "y": 860,
        "wires": [
            [
                "f77fafc4c91734e3"
            ]
        ]
    },
    {
        "id": "916da78ad513005c",
        "type": "change",
        "z": "c1119e96a359b48a",
        "g": "0eb6fb352ce86d20",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "age",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "f77fafc4c91734e3",
        "type": "change",
        "z": "c1119e96a359b48a",
        "g": "0eb6fb352ce86d20",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "distance",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "bbfb4e1ed5277b18",
        "type": "change",
        "z": "c1119e96a359b48a",
        "g": "0eb6fb352ce86d20",
        "name": "flow.age",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "age",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 820,
        "wires": [
            [
                "bf3eca666cd16016"
            ]
        ]
    },
    {
        "id": "07a7422a5082b74c",
        "type": "change",
        "z": "c1119e96a359b48a",
        "g": "0eb6fb352ce86d20",
        "name": "flow.distance",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "distance",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 860,
        "wires": [
            [
                "e99c4ceac5671ac7"
            ]
        ]
    },
    {
        "id": "c2e35e259485cc6c",
        "type": "ui_dropdown",
        "z": "c1119e96a359b48a",
        "g": "0eb6fb352ce86d20",
        "name": "Class selection",
        "label": "",
        "tooltip": "",
        "place": "Select detection",
        "group": "798d2385ab795d1a",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": true,
        "options": [
            {
                "label": "Human",
                "value": "Human",
                "type": "str"
            },
            {
                "label": "Car",
                "value": "Car",
                "type": "str"
            },
            {
                "label": "Truck",
                "value": "Truck",
                "type": "str"
            },
            {
                "label": "Bus",
                "value": "Bus",
                "type": "str"
            },
            {
                "label": "Motorcycle",
                "value": "Motorcycle",
                "type": "str"
            },
            {
                "label": "Other vehicle type",
                "value": "Vehicle",
                "type": "str"
            },
            {
                "label": "Face",
                "value": "Face",
                "type": "str"
            },
            {
                "label": "License plate",
                "value": "License plate",
                "type": "str"
            },
            {
                "label": "Unknown type",
                "value": "Object",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 600,
        "y": 780,
        "wires": [
            [
                "c04912f0e236033a"
            ]
        ]
    },
    {
        "id": "c04912f0e236033a",
        "type": "change",
        "z": "c1119e96a359b48a",
        "g": "0eb6fb352ce86d20",
        "name": "flow.classes",
        "rules": [
            {
                "t": "set",
                "p": "classes",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "51f9bb9974915c76",
        "type": "function",
        "z": "c1119e96a359b48a",
        "g": "0eb6fb352ce86d20",
        "name": "Classes",
        "func": "msg.options = [ \"Human\", \"Car\", \"Truck\", \"Bus\", \"Motorcycle\", \"Vehicle\", \"Face\", \"License plate\", \"Object\" ];\nif( !flow.get(\"classes\") ) {\n    msg.payload = [ \"Human\", \"Car\", \"Truck\", \"Bus\", \"Motorcycle\", \"Vehicle\" ];\n} else {\n    msg.payload = flow.get(\"classes\");\n}\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 780,
        "wires": [
            [
                "c2e35e259485cc6c"
            ]
        ]
    },
    {
        "id": "4b1113b2c546bdd8",
        "type": "ui_button",
        "z": "c1119e96a359b48a",
        "g": "e2137dd2b3f1387c",
        "name": "",
        "group": "798d2385ab795d1a",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Set area objects must pass",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 220,
        "y": 460,
        "wires": [
            [
                "b1fa01bdaac7558c"
            ]
        ]
    },
    {
        "id": "b1fa01bdaac7558c",
        "type": "function",
        "z": "c1119e96a359b48a",
        "g": "e2137dd2b3f1387c",
        "name": "aoi",
        "func": "msg.topic = \"aoi\";\nmsg.payload = flow.get(\"aoi\") || {\n    id: \"aoi\",\n    x1: 200,\n    y1: 200,\n    x2: 800,\n    y2: 800\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 460,
        "wires": [
            [
                "2294874a37208e4d"
            ]
        ]
    },
    {
        "id": "f11026655e297a23",
        "type": "ui_button",
        "z": "c1119e96a359b48a",
        "g": "e2137dd2b3f1387c",
        "name": "",
        "group": "798d2385ab795d1a",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Save",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "aoi",
        "topicType": "str",
        "x": 630,
        "y": 500,
        "wires": [
            [
                "2294874a37208e4d"
            ]
        ]
    },
    {
        "id": "cb99fae3c12034ed",
        "type": "change",
        "z": "c1119e96a359b48a",
        "g": "e2137dd2b3f1387c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "aoi",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "bbf63f36e48d35a4",
        "type": "link out",
        "z": "c1119e96a359b48a",
        "g": "0eb6fb352ce86d20",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "2d6748edf8563f3b"
        ],
        "x": 1035,
        "y": 660,
        "wires": []
    },
    {
        "id": "2d6748edf8563f3b",
        "type": "link in",
        "z": "c1119e96a359b48a",
        "g": "e2137dd2b3f1387c",
        "name": "link in 1",
        "links": [
            "bbf63f36e48d35a4"
        ],
        "x": 665,
        "y": 540,
        "wires": [
            [
                "2294874a37208e4d"
            ]
        ]
    },
    {
        "id": "73bad59f665e234a",
        "type": "inject",
        "z": "c1119e96a359b48a",
        "g": "963021aef5a2828f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 140,
        "wires": [
            [
                "042aac4ae5c082f7"
            ]
        ]
    },
    {
        "id": "042aac4ae5c082f7",
        "type": "function",
        "z": "c1119e96a359b48a",
        "g": "963021aef5a2828f",
        "name": "Data Retention",
        "func": "var days = 7;\n//Change above to desired number of days to retain data\n\nmsg.payload = {\n    device: flow.get(\"device\").serial || \"Undefined\",\n    timestamp: {\n        $lte: new Date().getTime() - (days * 24 * 3600 * 1000)\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 140,
        "wires": [
            [
                "7aea4c7dde0a002a"
            ]
        ]
    },
    {
        "id": "f2b9da6c0460316e",
        "type": "ui_button",
        "z": "c1119e96a359b48a",
        "g": "e2137dd2b3f1387c",
        "name": "",
        "group": "fbb99308b8a63c91",
        "order": 4,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Refresh image",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 320,
        "wires": [
            [
                "bac55f0864b2e149"
            ]
        ]
    },
    {
        "id": "bac55f0864b2e149",
        "type": "Camera",
        "z": "c1119e96a359b48a",
        "g": "e2137dd2b3f1387c",
        "resolution": "1280x720",
        "overlay": "no",
        "output": "base64",
        "x": 460,
        "y": 320,
        "wires": [
            [
                "69d86c1a9b39ebe5"
            ]
        ]
    },
    {
        "id": "69d86c1a9b39ebe5",
        "type": "function",
        "z": "c1119e96a359b48a",
        "g": "e2137dd2b3f1387c",
        "name": "Image properties",
        "func": "msg.topic = \"image\";\nmsg.payload = {\n    image: msg.payload,\n    aspect: \"16:9\",\n    rotation: 0\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 320,
        "wires": [
            [
                "2294874a37208e4d",
                "7ba26b2f9bf1b723"
            ]
        ]
    },
    {
        "id": "7ba26b2f9bf1b723",
        "type": "function",
        "z": "c1119e96a359b48a",
        "g": "e2137dd2b3f1387c",
        "name": "Update",
        "func": "msg.query = {\n    device: msg.payload.device\n}\n\nmsg.payload.device = flow.get(\"device\").serial || \"Undefined\";\nmsg.payload.name = flow.get(\"device\").hostname || flow.get(\"device\").name;\nmsg.payload.timestamp = new Date().getTime();\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 320,
        "wires": [
            [
                "5870a043cc207cf4"
            ]
        ]
    },
    {
        "id": "2e61cc7729cf74ed",
        "type": "inject",
        "z": "c1119e96a359b48a",
        "g": "e2137dd2b3f1387c",
        "name": "Every hour",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 360,
        "wires": [
            [
                "bac55f0864b2e149"
            ]
        ]
    },
    {
        "id": "ec11ed4b91df5240",
        "type": "function",
        "z": "c1119e96a359b48a",
        "g": "0eb6fb352ce86d20",
        "name": "startTime",
        "func": "msg.payload = flow.get(\"startTime\") || \"today\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 700,
        "wires": [
            [
                "d6e8a4c9b81dad2d"
            ]
        ]
    },
    {
        "id": "c4bb50de1e61dd7f",
        "type": "function",
        "z": "c1119e96a359b48a",
        "g": "0eb6fb352ce86d20",
        "name": "duration",
        "func": "msg.payload = flow.get(\"duration\") || 0;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 740,
        "wires": [
            [
                "e01d5d34f93bc161"
            ]
        ]
    },
    {
        "id": "77b2b32293b4619a",
        "type": "ui_ui_control",
        "z": "c1119e96a359b48a",
        "g": "e2137dd2b3f1387c",
        "name": "",
        "events": "all",
        "x": 160,
        "y": 400,
        "wires": [
            [
                "84bbf1f773a441d1"
            ]
        ]
    },
    {
        "id": "84bbf1f773a441d1",
        "type": "function",
        "z": "c1119e96a359b48a",
        "g": "e2137dd2b3f1387c",
        "name": "Tab",
        "func": "if( msg.payload !== \"change\")\n    return;\nif( msg.name !== \"Path heatmap\")\n    return\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 400,
        "wires": [
            [
                "bac55f0864b2e149"
            ]
        ]
    },
    {
        "id": "2b4d24e814731fcd",
        "type": "mongodb out",
        "z": "c1119e96a359b48a",
        "g": "963021aef5a2828f",
        "mongodb": "",
        "name": "Insert",
        "collection": "path",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 650,
        "y": 80,
        "wires": []
    },
    {
        "id": "7aea4c7dde0a002a",
        "type": "mongodb out",
        "z": "c1119e96a359b48a",
        "g": "963021aef5a2828f",
        "mongodb": "",
        "name": "Remove",
        "collection": "path",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 640,
        "y": 140,
        "wires": []
    },
    {
        "id": "5870a043cc207cf4",
        "type": "mongodb out",
        "z": "c1119e96a359b48a",
        "g": "e2137dd2b3f1387c",
        "mongodb": "",
        "name": "Update",
        "collection": "image",
        "payonly": true,
        "upsert": true,
        "multi": false,
        "operation": "update",
        "x": 1060,
        "y": 320,
        "wires": []
    },
    {
        "id": "1bfc738b59f92a75",
        "type": "mongodb in",
        "z": "c1119e96a359b48a",
        "g": "e2137dd2b3f1387c",
        "mongodb": "",
        "name": "Query",
        "collection": "path",
        "operation": "find",
        "x": 430,
        "y": 260,
        "wires": [
            [
                "7a560eac62505295"
            ]
        ]
    },
    {
        "id": "8851e1ed423632f9",
        "type": "Device Access",
        "name": "localhost",
        "address": "localhost",
        "protocol": "http"
    },
    {
        "id": "fbb99308b8a63c91",
        "type": "ui_group",
        "name": "Heatmap",
        "tab": "6ec99465f1d94ed6",
        "order": 1,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "798d2385ab795d1a",
        "type": "ui_group",
        "name": "Filter",
        "tab": "6ec99465f1d94ed6",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6ec99465f1d94ed6",
        "type": "ui_tab",
        "name": "Path heatmap",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]
